name: Caddy
on:
  workflow_dispatch:
  repository_dispatch:
    types: Caddy
  workflow_run:
    workflows: ["Notify"]
    types:
      - completed

jobs:
  build-release:
    runs-on: ubuntu-latest
    steps:
      # Setup
      - name: Setup QEMU
        uses: docker/setup-qemu-action@v3
        with:
          platforms: 'arm64,amd64'

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Setup Go
        uses: actions/setup-go@v3
        with:
          go-version: '1.21'

      # Install xcaddy for binary building 
      - name: Get xcaddy tool
        run: go install github.com/caddyserver/xcaddy/cmd/xcaddy@latest
            
      - name: Pull Local Repo
        uses: actions/checkout@v3

      # Build Caddy binaries with xcaddy
      - name: Build Binaries
        run: |
          bash build.sh
      
      # Get caddy version from binarys and set version/tag info
      - name: Get Version
        id: caddy_version
        run: |
          CADDY=$(./amd64/caddy version)
          vr="${CADDY}"
          # Extract version and remove the 'v' from the version string for the 'version' variable
          version=$(echo $vr | head -n1 | cut -d " " -f1 | sed 's/^v//')
          echo "version=$version" >> $GITHUB_ENV
          tag_name=$(echo $vr | head -n1 | cut -d " " -f1)
          echo "tag_name=$tag_name" >> $GITHUB_ENV

      # Get the latest caddy release notes from version tag
      - name: Get latest Caddy release notes
        id: get_release_notes
        uses: cardinalby/git-get-release-action@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag: "${{ steps.caddy_version.outputs.tag_name }}"
          repo: caddyserver/caddy

      # Create Binary release with release notes from upstream
      - name: Create Release
        id: create_release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: "${{ steps.caddy_version.outputs.tag_name }}"
          name: Caddy ${{ steps.caddy_version.outputs.tag_name }}
          body: |
            **Caddy ${{ steps.caddy_version.outputs.tag_name }} release notes:**
            _[caddyserver/caddy](https://github.com/caddyserver/caddy/releases/tag/${{ steps.caddy_version.outputs.tag_name }})_
            ${{ steps.get_release_notes.outputs.body }}
          files: |
            amd64/caddy
            amd64/caddy.exe
            arm64/caddy_arm64
        
      # Login to Docker Hub
      - name: Docker Hub Login
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_HUB_USR }}
          password: ${{ secrets.DOCKER_HUB_PW }}

      # Build Docker Containers
      - name: Build amd64 Container
        uses: docker/build-push-action@v5
        with:
          context: amd64/
          push: true
          tags: ${{ secrets.DOCKER_HUB_USR }}/caddy:latest, ${{ secrets.DOCKER_HUB_USR }}/caddy:${{ steps.caddy_version.outputs.version }}
          build-args: |
            "VERSION=${{ steps.caddy_version.outputs.version }}"
            
      - name: Build arm64 Container
        uses: docker/build-push-action@v5
        with:
          context: arm64/
          push: true
          tags: ${{ secrets.DOCKER_HUB_USR }}/caddy:latest-arm64, ${{ secrets.DOCKER_HUB_USR }}/caddy:${{ steps.caddy_version.outputs.version }}-arm64
          build-args: |
            "VERSION=${{ steps.caddy_version.outputs.version }}"
    
      - name: Inspect Docker images
        run: |
          docker buildx imagetools inspect alexandzors/caddy:latest
          docker buildx imagetools inspect alexandzors/caddy:latest-arm64

      # Do not have time to fix this right now...    
      # Send workflow notifications to self hosted ntfy instance based on run status.
      # - name: Notify on Success
      #   uses: niniyas/ntfy-action@master
      #   if: success()
      #   with:
      #     url: '${{ secrets.NTFY_URL }}'
      #     topic: '${{ secrets.NTFY_TOPIC }}'
      #     priority: 1
      #     headers: '{"Authorization": "Basic ${{ secrets.NTFY_CRED }}" }'
      #     tags: pushpin,caddy
      #     title: New Caddy release!
      #     details: 'New Version: ${{ steps.caddy_version.outputs.tag_name }}'
      #     icon: 'https://raw.githubusercontent.com/loganmarchione/homelab-svg-assets/f34e7c57d72973510cf68b79206f3528f55a01fc/assets/github-invertocat.svg'
      #     actions: '[{"action": "view","label": "See Release","url": "${{ steps.create_release.outputs.url }}"}, {"action": "view","label": "See Image","url": "https://hub.docker.com/r/${{ secrets.DOCKER_HUB_USR}}/caddy/tags"}]'

      # - name: Notify on Failure
      #   uses: niniyas/ntfy-action@master
      #   if: failure()
      #   with:
      #     url: '${{ secrets.NTFY_URL }}'
      #     topic: '${{ secrets.NTFY_TOPIC }}'
      #     priority: 4
      #     headers: '{"Authorization": "Basic ${{ secrets.NTFY_CRED }}" }'
      #     tags: no_entry,caddy
      #     title: Caddy build failed!
      #     details: One or more of the build steps in the alexandzors/caddy workflow failed.
      #     icon: 'https://raw.githubusercontent.com/loganmarchione/homelab-svg-assets/f34e7c57d72973510cf68b79206f3528f55a01fc/assets/github-invertocat.svg'
      #     actions: '[{"action": "view","label": "View Log","url": "https://github.com/${{github.repository}}/actions/runs/${{github.run_id}}"}]'

      # - name: Notify on Cancelled
      #   uses: niniyas/ntfy-action@master
      #   if: cancelled()
      #   with:
      #     url: '${{ secrets.NTFY_URL }}'
      #     topic: '${{ secrets.NTFY_TOPIC }}'
      #     priority: 3
      #     headers: '{"Authorization": "Basic ${{ secrets.NTFY_CRED }}" }'
      #     tags: no_entry_sign,caddy
      #     title: Caddy build cancelled!
      #     details: The alexandzors/caddy build workflow was cancelled.
      #     icon: 'https://raw.githubusercontent.com/loganmarchione/homelab-svg-assets/f34e7c57d72973510cf68b79206f3528f55a01fc/assets/github-invertocat.svg'
      #     actions: '[{"action": "view","label": "View Log","url": "https://github.com/${{github.repository}}/actions/runs/${{github.run_id}}"}]'